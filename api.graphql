### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BuyItemArgs {
  itemId: ID!
  userId: ID!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Item {
  id: String!
  partDescription: String
  partName: String!
  price: Float
  saberPart: String
}

input ItemArgs {
  partDescription: String!
  partName: String!
  saberPart: String!
}

input ItemWhereUniqueInput {
  id: String
}

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Mutation {
  _deprecated_field: String @deprecated(reason: "This is the root type")
  itemCreate(data: ItemArgs!): Item
  itemDelete(id: ID!): Item
  itemUpdate(data: ItemArgs!, id: ID!): Item
  login(data: UserAuthInput!): User
  randomItem(userId: ID!): User
  requestPurchase(
    """Input args to request a  purchase"""
    data: BuyItemArgs!
  ): User
  sellItem(
    """Input args to request a  purchase"""
    data: BuyItemArgs!
  ): User
  signup(data: UserAuthInput!): User
  userUpdate(data: UserDetailsUpdateArgs!): User
}

type Query {
  _deprecated_field: String @deprecated(reason: "This is the root type")
  getWebshopContent: [Item!]
  item(where: ItemWhereUniqueInput!): Item
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

type User {
  details: UserDetails!
  id: String!
  inventory(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  money: Int!
  username: String!
}

input UserAuthInput {
  username: String!
}

type UserDetails {
  firstName: String
  id: String!
  lastName: String
  user: User!
}

input UserDetailsUpdateArgs {
  firstName: String
  id: ID!
  lastName: String
}

input UserWhereUniqueInput {
  id: String
  username: String
}
